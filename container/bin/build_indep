#!/usr/bin/env bash

set -exuo pipefail

exec 3>&1
exec 1>&2

main() (
	input_dir="${1:-/input}"
	DEB_BUILD_OPTIONS="$(cat "$input_dir/.build_options")"
	DEB_BUILD_PROFILES="$(cat "$input_dir/.build_profiles")"
	export DEB_BUILD_OPTIONS
	export DEB_BUILD_PROFILES

	dsc="$(realpath "$input_dir/.source")"
	dsc_arch="$(grep -oP '(?<=^Architecture: ).*' < "$dsc" | tr ' ' '\n')"

	grep -P '^(linux-)?all$' <<< "$dsc_arch" || exit 0

	sudo apt-get update
	sudo apt-get build-dep --no-install-recommends -y "$dsc"

	dpkg-source --extract "$dsc" src
	cd src
	pkg="$(dpkg-parsechangelog --show-field Source)"
	version="$(dpkg-parsechangelog --show-field Version)"
	dpkg-buildpackage --no-sign --build=all
	cd ..
	rm -rf src
	ls -lah

	if [ -d "/output" ]; then
		{ echo "${pkg}_${version}_all.changes"; get_files < "${pkg}_${version}_all.changes"; } | while read file; do
			sudo cp -d "$file" "/output/$file"
		done
	fi

	echo "${pkg}_${version}_all" >&3
)

get_files() (
	awk '!/^ / { flag=0 } flag { print $NF } /^Files:/ { flag=1 }'
)

main "$@"
